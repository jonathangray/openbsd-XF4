XCOMM $XFree86: xc/config/cf/darwin.cf,v 1.14 2001/05/18 17:48:23 torrey Exp $

/* Darwin / Mac OS X configuration by John Carmack <johnc@idsoftware.com> */

/* imake determines the default values by parsing uname */
#define OSName                  DefaultOSName
#define OSMajorVersion          DefaultOSMajorVersion
#define OSMinorVersion          DefaultOSMinorVersion
#define OSTeenyVersion          0

#define HasSnprintf             YES
#define HasPutenv               YES
#define HasBSD44Sockets         YES
#define BuildGlxExt             NO
#ifndef HasShm
# define HasShm                 YES
#endif

/*
 * This enables some settings for developers.
 */
#ifndef XFree86Devel
# define XFree86Devel            NO
#endif

/*
 * This enables Quartz compatibility.
 * Turn off to build on raw Darwin systems.
 */
#ifndef DarwinQuartzSupport
# define DarwinQuartzSupport     YES
#endif

/* we don't need -lm */
#define MathLibrary             /**/

/* we don't have a termcap library */
#define TermcapLibrary          /**/

/* we don't have a dbm library */
#define DBMLibrary              /**/

/* our cpp isn't in /lib/cpp and it doesn't like -undef */
#define CppCmd                  /usr/bin/cpp
#define RawCppCmd               CppCmd

/* we have a gcc compatible compiler, but its not called gcc */
#define CcCmd                   /usr/bin/cc
#define CplusplusCmd            /usr/bin/c++

/* uncommenting this line will get -g instead of -O, which builds
 * a lot faster and gets debug info
 */
#if 0
#define DefaultCDebugFlags      -g
#endif

/* default flags to pass to cc */
#ifndef DefaultCCOptions
#if XFree86Devel
# define DefaultCCOptions       -Wall -Wpointer-arith -Wstrict-prototypes \
                                -Wmissing-prototypes -Wmissing-declarations \
                                -Wredundant-decls -Wnested-externs \
                                -traditional-cpp
#else
# define DefaultCCOptions       -Wall -Wpointer-arith -traditional-cpp
#endif
#endif

/* flags to pass to cc when building libraries */
#ifndef LibraryCCOptions
# define LibraryCCOptions       DefaultCCOptions -fno-common
#endif

/*
 * __DARWIN__ will be used for platform specific #ifdefs that can't
 * be handled by existing X defines.
 *
 * Darwin's alloca() seg faults (rather than returning NULL) on failed
 * allocations, so we can't use it.
 */
#ifdef PpcDarwinArchitecture
#define StandardDefines         -D__powerpc__ -D__DARWIN__ -DNO_ALLOCA
#else
#define StandardDefines         -D__DARWIN__ -DNO_ALLOCA
#endif

/* programs/rgb/rgb.h and others needs this */
#define HasNdbm                 YES

/* set this to NO to just build the client libs, which should work without
 * having to write any platform specific code.
 */
#define BuildServer             YES

/* our custom X server */
#define XDarwinServer           YES

/* Thanks to the IOKit, the X server does not have to be SetUID. */
#ifndef InstallXserverSetUID
# define InstallXserverSetUID	NO
#endif

/* pex? bah.  I'm not going to bother getting the device
 * dependent part of this working.  If I get the time, i'll
 * get glx working instead.
 */
#define BuildPexExt             NO

/* no direct graphics extension */
#define BuildXF86DGA            NO

/* no server support for extra tablets and weird input devices */
#define BuildXInputExt          NO
#define BuildXInputLib          YES

/* no Display Power Management extension */
#define BuildDPMSExt            NO

#define BuildXvExt              NO

/* no OpenGL libraries */
#ifndef BuildGLXLibrary	
# define BuildGLXLibrary        NO
#endif
#ifndef BuildGLULibrary
# define BuildGLULibrary        NO
#endif

#define BuildLibPathVar         DYLD_LIBRARY_PATH

/* include rules to build shared libraries */
#include <darwinLib.rules>

/*
 * Darwin specific Imake Config files
 */
#ifndef LocalConfigFiles
#define LocalConfigFiles \
	darwinLib.rules \
	darwinLib.tmpl
#endif

/* include all the XFree86 rules */
#include <xfree86.cf>


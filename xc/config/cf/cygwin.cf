XCOMM platform:  $XFree86: xc/config/cf/cygwin.cf,v 3.16.2.1 2001/05/30 14:29:27 alanh Exp $

#ifndef OSName
#define OSName                  Cygwin
#endif
#ifndef OSVendor
#define OSVendor                Red Hat Inc.
#endif
#ifndef OSMajorVersion
#define OSMajorVersion          1
#endif
#ifndef OSMinorVersion
#define OSMinorVersion          3
#endif
#ifndef OSTeenyVersion
#define OSTeenyVersion		1
#endif

#define ProjectRoot /usr/X11R6

#define BuildServer		YES

#ifndef UnixCpp
#define UnixCpp
#endif

#define HasGcc2ForCplusplus     YES
#define GccUsesGas              YES
#define UseGas                  YES
#define GnuCpp                  YES
#define BootstrapCFlags		-L/lib/automode.o

#define HasShadowPasswd         NO
#define HasLibCrypt             YES
#define HasPutenv               YES
#define HasPoll			NO
#if UseCygIPC
# define HasShm			YES
# define ServerExtraSysLibs	-lcygipc
#else
# define HasShm                 NO
# define ServerExtraSysLibs	/**/
#endif
#define HasSnprintf		YES

/*
 * Cygwin has Tcl/Tk, but you need to keep the version numbers
 * of the libs in sync.  These version numbers may change
 * occassionally.
 */
#define Hastcl                  YES
#define Hastk                   YES
#define TclLibName              tcl80
#define TkLibName               tk80

#define HasSockets              YES
#define GzipFontCompression	YES
#define HasZlib			YES

#define SharedLibFont           NO
#define AvoidNullMakeCommand    YES
#define StripInstalledPrograms  NO
#define CompressAllFonts        YES
#define Malloc0ReturnsNull      NO
#define NeedConstPrototypes     YES
#define NeedFunctionPrototypes  YES
#define NeedNestedPrototypes    YES
#define NeedVarargsPrototypes   YES
#define NeedWidePrototypes      NO
#define SetTtyGroup             YES
#define ExpandManNames          NO
#define HasDlopen	        NO
#define HasGnuMake		YES
#define UseGccMakeDepend	YES

/*
 * This options may depend on the state of POSIX thread
 * support in Cygwin, which is improving as of 2001-04-12.
 */
#define ThreadedX               NO
#define HasThreadSafeAPI        NO

#define LnCmd                   ln -s
#define CcCmd                   gcc
#define CpluplusCmd		c++ -fpermissive
#define AsCmd                   as
#define GccGasOption	        -DGCCUSESGAS
#define AsmDefines	        -DUSE_GAS -DGCCUSESGAS
#define LdCmd                   ld
#define MkdirHierCmd            mkdir -p
#define CppCmd                  cpp
#define YaccCmd                 byacc
#define LexCmd                  flex -l
#define LexLib                  -lfl
#define HasFlex			YES

#define PreProcessCmd           CcCmd -E

#define StdIncDir               `CcCmd --print-libgcc-file-name | sed 's,\\\\,/,g' | sed 's,libgcc.a,../../../../i686-pc-cygwin/include,'`

#define PostIncDir              `CcCmd --print-libgcc-file-name | sed 's,\\\\,/,g' | sed 's,libgcc.a,include,'`

#define LdCombineFlags          -r

# ifndef OptimizedCDebugFlags
#  define OptimizedCDebugFlags	DefaultGcc2i386Opt
# endif

#define StandardDefines         -D__i386__ -DWIN32_LEAN_AND_MEAN -DX_LOCALE -D_X86_ -D__STDC__ -DNO_TCP_H -D__CYGWIN__ -D_XOPEN_SOURCE -D_POSIX_C_SOURCE=199309L -D_BSD_SOURCE -D_SVID_SOURCE -D_GNU_SOURCE -DX_SOURCE

#define XawI18nDefines          -DUSE_XWCHAR_STRING -DUSE_XMBTOWC
#define HasWChar32              YES
#define StandardCppOptions	-traditional
#if UseCygIPC
# define StandardCppDefines      -DHAS_SHM StandardDefines
#else
# define StandardCppDefines      StandardDefines
#endif
#define ServerOSDefines         XFree86ServerDefines -DDDXTIME -DFD_SETSIZE=256 -DDXOSINIT
#define XkbServerDefines        -DXKB_ALWAYS_USES_SOFT_REPEAT
#define ServerExtraDefines      -DGCCUSESGAS XFree86ServerDefines
#define ConnectionFlags         -DTCPCONN -DUNIXCONN
#define ExtraLibraries          
#define InstUidFlags            -m 4711
#define UseRgbTxt                YES
#define ExtraFilesToClean	  *.obj *.orig *.rej junk.c *.exe *.dll *.lib *~

/*
 * You'll probably want BuildDebug to be YES if you are debugging :)
 */
#define BuildDebug		NO
#define XFree86Devel		NO

/*
 * Xinerama is multiple monitor support and will require special code,
 * if it even makes sense to enable such a beast in Cygwin/XFree86.
 */
#define BuildXinerama		NO

/*
 * PEX and XIE were deprecated on 2001-05-29, as Keith Packard says,
 * "they are so broken as to be unusable in real applications," furthermore,
 * "neither PEX nor XIE have seen any development for almost a decade".
 * 
 * XIE is the X Image Extension Protocol, not to be confused with
 * XInputExt, which is the X Input Extension.
 */
#define BuildPexExt		NO
#define BuildXIE		NO

/*
 * Rush is a non standard extension for cooperation between the glide
 * library and the X server.  Cygwin/XFree86 will never need Rush,
 * as all graphics requests are processed through GDI or DirectDraw.
 */
#define BuildXF86RushExt	NO

/*
 * DPMS is the Display Power Management System.  Cygwin/XFree86 doesn't
 * own the display hardware, Windows does, so it doesn't make sense
 * for Cygwin/XFree86 to try to provide power management.
 */
#define BuildDPMS		NO
#define BuildDPMSExt		NO
#define DPMSDefines		/**/

#define BuildGlxExt             YES
#define BuildXInputExt		YES
#define BuildXF86VidModeExt     YES
#define BuildXF86DGA		NO
#define BuildXvExt		YES
#define BuildXF86MiscExt	YES
#define BuildRender		YES
#define BuildXF86DRI		NO
#define BuildXF86DRM		NO
#define BuildXKB		YES
#define BuildXCMiscExt		YES
#define BuildTestExt		YES
#define BuildMITMiscExt		YES
#define BuildSyncExt		YES
#define BuildBigReqsExt		YES
#define BuildEVI		YES
#define BuildXF86BigfontExt	YES
#define BuildRECORD		YES
#define BuildDBE		YES
#define BuildFontCache		YES
#define BuildLBX		YES
#define BuildCup		YES
#define BuildXCSecurity		YES
#define BuildAppgroup		YES
#define BuildShapeExt		YES
#define BuildScanpci		NO

#define BuildScreenSaverExt	NO

/*
 * What is Plugin?
 */
#define BuildPlugin		NO

/*
 * DPS is the Adobe Display Postscript (r) library.
 * It seems that we do not yet have a postscript client library
 * to work in conjunction with DPS; the remedy to this may be
 * as simple as flipping a build switch or instaling Ghostscript.
 * In any case, some work needs to be done before DPS will work. 
 */
#define BuildDPS		NO

/*
 * Doing a loadable server would probably take some extra work.
 */
#define DoLoadableServer	NO

/*
 * Don't build the XFree86 server
 */
#define XF86Server		NO

/*
 * Try to avoid building anything related to graphics cards
 */
#define XFShadowFB		NO
#define XF24_32Bpp		NO
#define XF8_16Bpp		NO
#define XF8_32Bpp		NO
#define XF4Bpp			NO
#define XF1Bpp			NO
#define XF86VgaHw		NO
#define XF86FBDevHw		NO
#define XF86XAA			NO
#define XF86Ramdac		NO
#define XF86I2C			NO
#define XF86DDC			NO
#define XF86RAC			NO
#define XF86Int10		NO

#define XF86AFB			NO

#define XF86CardDrivers		/**/

/* Some of these man page defaults are overriden in the above OS sections */
#ifndef ManSuffix
# define ManSuffix      1x
#endif
#ifndef ManDir
# define ManDir         $(MANSOURCEPATH)1
#endif
#ifndef LibManSuffix
# define LibManSuffix   3x
#endif
#ifndef LibmanDir
# define LibmanDir      $(MANSOURCEPATH)3
#endif
#ifndef FileManSuffix
# define FileManSuffix  5x
#endif
#ifndef FileManDir
# define FileManDir     $(MANSOURCEPATH)5
#endif

/* we don't need -lm */
#define MathLibrary             /**/
#define TermcapLibrary -ltermcap
#define XnestServer			YES
#define BuildXprint			YES
#define XprtServer			YES
#define XVirtualFramebufferServer	YES
#define XWinServer			YES

/*
 * Why we don't use the smart scheduler?
 */
#define UseSmartScheduler		NO

/* --unix option of cygwin make fools the standard MakeFlagsToShellFlags macro */
#define MakeFlagsToShellFlags(makeflags,shellcmd)\
	for flag in ${MAKEFLAGS} ''; do \				@@\
	  case "$$flag" in *=*) ;;--*) ;; *[makeflags]*) shellcmd;; esac; done

#include <cygwin.rules>
#include <xfree86.cf>
